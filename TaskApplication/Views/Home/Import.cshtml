@model IEnumerable<EmployeeViewModel>

@{
    ViewData["Title"] = "Employee Import";
}

<h2>Employee Import</h2>

@using (Html.BeginForm("ImportCsv", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="form-group">
        <label for="file">Select a CSV File:</label>
        <input type="file" name="file" id="file" accept=".csv" required />
    </div>

    <button type="submit" class="btn btn-primary">Import</button>
}

<br />
<br />

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}

@if (Model != null && Model.Any())
{
    <h3>Imported Employees</h3>
    <p>Total Rows Added: @Model.Count()</p>

    <table id="employeeTable" class="table table-bordered">
        <thead>
            <tr>
                <th>Payroll Number</th>
                <th>Forenames</th>
                <th>Surname</th>
                <th>Date of Birth</th>
                <th>Telephone</th>
                <th>Mobile</th>
                <th>Address</th>
                <th>Address 2</th>
                <th>Postcode</th>
                <th>Email Home</th>
                <th>Start Date</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var employee in Model)
            {
                <tr>
                    <td>@employee.Payroll_Number</td>
                    <td>@employee.Forenames</td>
                    <td>@employee.Surname</td>
                    <td>@employee.Date_of_Birth.ToShortDateString()</td>
                    <td>@employee.Telephone</td>
                    <td>@employee.Mobile</td>
                    <td>@employee.Address</td>
                    <td>@employee.Address_2</td>
                    <td>@employee.Postcode</td>
                    <td>@employee.EMail_Home</td>
                    <td>@employee.Start_Date.ToShortDateString()</td>
                    <td>
                        @employee.Id
                        <a href="#" class="edit-employee" data-id="@employee.Id">Edit</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<!-- Edit Employee Modal -->
<div class="modal fade" id="editEmployeeModal" tabindex="-1" role="dialog" aria-labelledby="editEmployeeModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editEmployeeModalLabel">Edit Employee</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <!-- Form for editing employee data -->
                <form id="editEmployeeForm">
                    <!-- Add form fields for editing employee data here -->
                </form>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <!-- JavaScript and jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js" defer></script>
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.24/css/jquery.dataTables.min.css">
    <script defer src="https://cdn.datatables.net/1.10.24/js/jquery.dataTables.min.js"></script>

    <script>
        var $ = jQuery.noConflict();
        $(document).ready(function () {
            // Initialize DataTables
            var dataTable = $('#employeeTable').DataTable({
                "paging": false,
                "ordering": true,
                "searching": true
            });

            // Event handler for "Edit" buttons
            $('#employeeTable').on('click', '.edit-employee', function (e) {
                e.preventDefault(); // Prevent the default link behavior
                console.log("Before: Data-id value: " + $(this).data('id'));
                var employeeId = $(this).data('id');
                console.log("After: employeeId value: " + employeeId);
                openEditModal(employeeId);
            });

            function openEditModal(employeeId) {
                console.log(employeeId);
                if (employeeId) {
                    // Send an Ajax request to retrieve employee data with the employeeId in the URL
                    $.ajax({
                        url: `/Home/GetEmployeeById?employeeId=${employeeId}`,
                        method: 'GET',
                        success: function (data) {
                            // Populate the edit form with the retrieved data
                            $('#editEmployeeForm').html(data);
                            $('#editEmployeeModal').modal('show');
                        },
                        error: function (xhr, status, error) {
                            console.error(xhr.responseText);
                            alert('Error loading employee data. See console for details.');
                        }
                    });
                } else {
                    console.error("Invalid employeeId");
                }
            }

            // Event handler for saving changes
            $('#editEmployeeForm').on('submit', function (e) {
                e.preventDefault(); // Prevent the default form submission

                // Serialize the form data
                var formData = $(this).serialize();

                // Send an Ajax request to save the changes
                $.ajax({
                    url: '/Home/SaveEmployeeChanges',
                    method: 'POST',
                    data: formData,
                    success: function (response) {
                        if (response.success) {
                            // Close the modal and update the table if the save was successful
                            $('#editEmployeeModal').modal('hide');
                            // You may also want to refresh the employee table here
                        } else {
                            // Handle errors or display error messages
                            console.error(response.message);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error(xhr.responseText);
                        alert('Error saving employee changes. See console for details.');
                    }
                });
            });
        });
    </script>
}